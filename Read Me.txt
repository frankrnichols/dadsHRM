"Incremental backup notes" 
9/13/2015 18:40 Snapshot_0: first successful incremental backup in the FRN style
9/14/2015 17:52 Snapshot_1: first successful editing of css file for background color and (foreground) 'color' !
9/14/2015 18:8 Snapshot_2: first successful background image - the secret was that the img file needed to be in the css folder
9/14/2015 18:11 Snapshot_3: first successful bgimage from Kevin's files. NEXT: make it 'cover' the area.
9/14/2015 23:51 Snapshot_4: huh? I didn't think I wanted a backup here, but just in case
9/15/2015 0:48 Snapshot_5: got background to show - now how to make it just cover the display instead of being too large for smartphone?
9/15/2015 0:56 Snapshot_6: got background to 'cover' but because the aspect-ratio is wrong for my droid, the bottom is a bit cut off. 
	The top and sides are perfect
9/15/2015 8:55 Snapshot_7: double-safe for continuing work at other campus after hours
10/5/2015 19:24 Snapshot_8: Matt Misiurak's new code 
	This should get you going. Replace the attached index.js with your current index.js file and then you can change 
	the '<h1 id="beatsPerMinute"' element value in index.html to see the image change to match the corresponding number. 
	The only changes I made to index.js was:
		Added the function 'setBackgroundImage' to the end of the file. 
		Added a call to the 'setBackgroundImage' function inside the 'initialize' function. 
	You'll probably move the function call out of the 'initialize' function and put it at the end of the 'onData' function 
	for practical use but I left it inside 'initialize' for easy initial testing. The 'setBackgroundImage' function will also 
	need some minor editing for any images that don't fall into the 'KickScreen#.png' format.
10/5/2015 19:32 Snapshot_9: ready to test for real (untested yet)
10/15/2015 21:45 Snapshot_12: this Droid thingie is good enuff to go.... I'm gonna try to fix the screen aspect ratios, then I'll try it
	with the real sensor and perhaps tweak when the Shake.png and '0' screens come up.... otherwise, we're done
